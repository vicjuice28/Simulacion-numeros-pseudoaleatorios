/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package generador.de.numeros;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.commons.math3.distribution.NormalDistribution;

/**
 *
 * @author victo
 */
public class congruencialA extends javax.swing.JFrame {

    /**
     * Creates new form cuadradosmedios
     */
    public congruencialA() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    ArrayList<Float> media = new ArrayList<>();
    DecimalFormat format = new DecimalFormat("#.####");
    ArrayList<Integer>bits= new ArrayList<>();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        x1Txt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        generarBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        x2Txt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        x3Txt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        x4Txt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        modTxt = new javax.swing.JTextField();
        x5Txt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        getback = new javax.swing.JButton();
        pruebasBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Congruencial Aditivo");

        x1Txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x1TxtActionPerformed(evt);
            }
        });

        jLabel2.setText("X1:");

        generarBtn.setText("Generar");
        generarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarBtnActionPerformed(evt);
            }
        });

        TextArea.setColumns(20);
        TextArea.setRows(5);
        jScrollPane1.setViewportView(TextArea);

        jLabel3.setText("X2:");

        x2Txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x2TxtActionPerformed(evt);
            }
        });

        jLabel4.setText("X3:");

        x3Txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x3TxtActionPerformed(evt);
            }
        });

        jLabel5.setText("X4:");

        x4Txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x4TxtActionPerformed(evt);
            }
        });

        jLabel6.setText("Mod: ");

        modTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modTxtActionPerformed(evt);
            }
        });

        x5Txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x5TxtActionPerformed(evt);
            }
        });

        jLabel7.setText("X5");

        getback.setText("Regresar");
        getback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getbackActionPerformed(evt);
            }
        });

        pruebasBtn.setText("Pruebas estadisticas");
        pruebasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pruebasBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(getback)
                        .addGap(97, 97, 97))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(230, 230, 230))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(x1Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(x2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(x3Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(x4Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(x5Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pruebasBtn)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(modTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(generarBtn)))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(x1Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(x2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(x3Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(x4Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(modTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(x5Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(generarBtn))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pruebasBtn)
                        .addGap(102, 102, 102)
                        .addComponent(getback)))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarBtnActionPerformed
        // TODO add your handling code here:
        int x1=0,x2=0,x3=0,x4=0,x5=0,mod=0;
        int numero1,numero2;
        
        
        try{
            x1 = Integer.parseInt(x1Txt.getText());
            x2 = Integer.parseInt(x2Txt.getText());
            x3 = Integer.parseInt(x3Txt.getText());
            x4 = Integer.parseInt(x4Txt.getText());
            x5 = Integer.parseInt(x5Txt.getText());
            mod = Integer.parseInt(modTxt.getText());
        }
        catch(NumberFormatException numberFormatException){
            JOptionPane.showMessageDialog(null,"La semilla no es un numero","Error del sistema",JOptionPane.ERROR_MESSAGE);
        }
        
        double Xi[] = {x1,x2,x3,x4,x5};
        
        ListaLib lista = new ListaLib();
        lista.agregarAlFinal(x1);
        lista.agregarAlFinal(x2);
        lista.agregarAlFinal(x3);
        lista.agregarAlFinal(x4);
        lista.agregarAlFinal(x5);
        
        
        System.out.println(lista.getTamanio());
         
            for(int i=0; i<500; i++){
            
            try {
            numero1 = lista.getValor(lista.getTamanio()-1)+lista.getValor(i);
            numero2 = numero1 % mod;
            lista.agregarAlFinal(numero2);
            double num = (double) numero2;
            double modD = (double) mod;
            double numero3 = num/(modD-1);
            media.add((float)(numero3));
            TextArea.append("Semilla: "+numero2 +"\t"+"R"+i+": "+ format.format(numero3) +"\n");
            } catch (Exception ex) {
            Logger.getLogger(congruencialA.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
            }
            
            
      
       
          
        
 
    }//GEN-LAST:event_generarBtnActionPerformed

    private void x1TxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x1TxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x1TxtActionPerformed

    private void x2TxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x2TxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x2TxtActionPerformed

    private void x3TxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x3TxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x3TxtActionPerformed

    private void x4TxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x4TxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x4TxtActionPerformed

    private void modTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modTxtActionPerformed

    private void x5TxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x5TxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_x5TxtActionPerformed

    private void getbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getbackActionPerformed
        // TODO add your handling code here:
        new NewJFrame().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_getbackActionPerformed

    private void pruebasBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pruebasBtnActionPerformed
        // TODO add your handling code here:
        
        //Media
        float media1 = 0;
        for(int i=0;i<media.size();i++){
            media1+= media.get(i);
        }
        float mediafinal = media1/media.size();
        
        //Varianza
        float rango;
        float varianza = 0;
        for(int i=0; i<media.size();i++){
            
            rango = (float) Math.pow(media.get(i)-mediafinal,2);
            varianza+= rango;
        }
        varianza= varianza/media.size();
        
        //Prueba de corridas
        float confianza= (float) 0.95;
        float alfa =1- confianza;
        String resulCorridas;
        
        
        for (int i=1; i<media.size(); i++){
        if (media.get(i)<=media.get(i-1)){
            bits.add(0);
        }
        else{
            bits.add(1);
        }                      
    }
        
        int corridas,dato;
        corridas = 1;
        dato=bits.get(0);
        
        for (int i=1; i<bits.size(); i++){
        if (bits.get(i) != dato){
            corridas++;
            dato = bits.get(i);
        }
    }
        double z;
        z= Math.abs((corridas-mediafinal)/Math.sqrt(varianza));
        NormalDistribution normal = new NormalDistribution();
        double  zn =  normal.inverseCumulativeProbability(1-alfa/2);
        if (z < zn){
        resulCorridas= "No se rechaza que son independientes.";
    }
    else{
        resulCorridas="No pasa la prueba de corridas";
    }
        
        //Chi cuadrada
 
  ArrayList<Float> range1 = new ArrayList<>();
  ArrayList<Float> range2 = new ArrayList<>();
  ArrayList<Float> range3 = new ArrayList<>();
  ArrayList<Float> range4 = new ArrayList<>();
  ArrayList<Float> range5 = new ArrayList<>();
  ArrayList<Float> range6 = new ArrayList<>();
  ArrayList<Float> range7 = new ArrayList<>();
  ArrayList<Float> range8 = new ArrayList<>();
  ArrayList<Float> range9 = new ArrayList<>();
  ArrayList<Float> range10 = new ArrayList<>();
  
  

  int n = media.size();
  float m = (float) Math.pow(n,2);

  // Range 1
  media.forEach((num) -> {
    if (num >= 0 && num < 0.1) range1.add(num);
    if (num >= 0.1 && num < 0.2) range2.add(num);
    if (num >= 0.2 && num < 0.3) range3.add(num);
    if (num >= 0.3 && num < 0.4) range4.add(num);
    if (num >= 0.4 && num < 0.5) range5.add(num);
    if (num >= 0.5 && num < 0.6) range6.add(num);
    if (num >= 0.6 && num < 0.7) range7.add(num);
    if (num >= 0.7 && num < 0.8) range8.add(num);
    if (num >= 0.8 && num < 0.9) range9.add(num);
    if (num >= 0.9 && num <= 1) range10.add(num);
  });
ArrayList<ArrayList> ranges = new ArrayList<>();
  ranges.add(range1);
  ranges.add(range2);
  ranges.add(range3);
  ranges.add(range4);
  ranges.add(range5);
  ranges.add(range6);
  ranges.add(range7);
  ranges.add(range8);
  ranges.add(range9);
  ranges.add(range10);
  
  float sumatoria=(float) 0.000;
  for(int i=0; i<ranges.size();i++){
    float oi= ranges.get(i).size();
    float ei = m;
    float x= ((ei-oi)* (ei-oi))/ei;
    sumatoria+= x;
  }
  
  
  
  //Prueba de poker
  
  /*
	{
		int vec[],vec_fo[];
		double vec_fei[],x02=0,xan1,pmano[]={0.324,0.504,0.108,0.072,0.009,0.0045,0.0001};
		int N=periodo;
		vec=new int[periodo];
		vec_fo=new int[7];
		vec_fei=new double[7];
		for(int i=0;i<periodo;i++)
		{
			vec[i]=(int)(nps[i]*100000);
		}
		getfo(vec,vec_fo);
		for(int i=0;i<vec_fo.length;i++)
		{
			vec_fei[i]=pmano[i]*N;
		}
		rodar(vec_fo,vec_fei);
		for(int i=0;vec_fei[i]<vec_fei.length;i++)
		{
			x02+=Math.pow(vec_fo[i]-vec_fei[i],2)/vec_fei[i];
		}
		xan1=Chi2.getchi2().ObtenerChi(alfa, n-1);
		if(x02<xan1){

                        return true;
        }
  */

    String poker= "No pasa la prueba de poker";

        
        
        
        //Mensaje con todo
        JOptionPane.showMessageDialog(this, "La media es: "+format.format(mediafinal)+"\n"+
                "La varianza es: "+format.format(varianza)+"\n"+
                resulCorridas+"\n"+
                "Chi cuadrada: "+sumatoria+"\n"+
                "Prueba de poker: "+poker,"Pruebas estadisticas",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_pruebasBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(congruencialA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(congruencialA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(congruencialA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(congruencialA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new congruencialA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TextArea;
    private javax.swing.JButton generarBtn;
    private javax.swing.JButton getback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField modTxt;
    private javax.swing.JButton pruebasBtn;
    private javax.swing.JTextField x1Txt;
    private javax.swing.JTextField x2Txt;
    private javax.swing.JTextField x3Txt;
    private javax.swing.JTextField x4Txt;
    private javax.swing.JTextField x5Txt;
    // End of variables declaration//GEN-END:variables
}
